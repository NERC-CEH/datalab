# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Base VM OS configuration.
  config.vm.box = "geerlingguy/ubuntu1404"
  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.ssh.insert_key = false

  config.vm.provider :virtualbox do |v|
    v.memory = 256
    v.cpus = 1
  end

  # Define two VMs with static private IP addresses.
  boxes = [
    { :name => "gluster1", :ip => "192.168.29.2" },
    { :name => "gluster2", :ip => "192.168.29.3" }
  ]

  # Provision each of the VMs.
  boxes.each do |opts|
    config.vm.define opts[:name] do |config|
      config.vm.hostname = opts[:name]
      config.vm.network :private_network, ip: opts[:ip]

      # Configure Disks
      config.vm.provider :virtualbox do |vb|
          unless File.exist?("disk-#{opts[:name]}-0.vdi")
              vb.customize ["storagectl", :id,"--name", "VboxSata", "--add", "sata"]
          end
      end

      (0..1).each do |d|
          config.vm.provider :virtualbox do |vb|
              unless File.exist?("disk-#{opts[:name]}-#{d}.vdi")
                  vb.customize [ "createmedium", "--filename", "disk-#{opts[:name]}-#{d}.vdi", "--size", 1024*1024 ]
              end
              vb.customize [ "storageattach", :id, "--storagectl", "VboxSata", "--port", 3+d, "--device", 0, "--type", "hdd", "--medium", "disk-#{opts[:name]}-#{d}.vdi" ]
              vb.memory = 1024
              vb.cpus = 2
          end
      end

      # Provision both VMs using Ansible after the last VM is booted.
      if opts[:name] == "gluster2"
        config.vm.provision "ansible" do |ansible|
          ansible.playbook = "playbooks/provision.yml"
          ansible.inventory_path = "inventory"
          ansible.limit = "all"
        end
      end
    end
  end
end
