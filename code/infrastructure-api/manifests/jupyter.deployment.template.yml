---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    name: {{ name }}
  name: {{ name }}
spec:
  template:
    metadata:
      labels:
        name: {{ name }}
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
        - name: create-notebook-folders
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args: ["-c", "mkdir -p /mnt/glusterfs/notebooks/jupyter"]
          volumeMounts:
            - mountPath: /mnt/glusterfs
              name: glusterfsvol
        - name: set-directory-owner
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh"]
          args: ["-c", "chown 1000:100 /mnt/glusterfs/notebooks && chown 1000:100 /mnt/glusterfs/notebooks/jupyter"]
          volumeMounts:
            - mountPath: /mnt/glusterfs
              name: glusterfsvol
      containers:
      - image: {{ &jupyter.imageName }}:{{ jupyter.version }}
        imagePullPolicy : "IfNotPresent"
        name: {{ name }}
        command: ["start.sh",
          "jupyter", "notebook",
          "--NotebookApp.token='$(JUPYTER_TOKEN)'",
          "--NotebookApp.allow_origin='{{ domain }}'",
          "--NotebookApp.notebook_dir='/data/notebooks/jupyter'"]
        ports:
        - containerPort: 8888
          protocol: TCP
        env:
        - name: JUPYTER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ name }}
              key: token
        - name: GRANT_SUDO
          value: "{{ grantSudo }}"
        - name: R_LIBS_USER
          value: "/data/packages/R/%p/%v"
        resources:
          requests:
            cpu: 200m
            memory: 128Mi
          limits:
            cpu: 2
            memory: 4Gi
{{#volumeMount}}
        volumeMounts:
            - mountPath: /data
              name: glusterfsvol
      volumes:
        - name: glusterfsvol
          persistentVolumeClaim:
            claimName: {{ volumeMount }}-claim
{{/volumeMount}}
