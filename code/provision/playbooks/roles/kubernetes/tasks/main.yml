---
- name: Allow HTTPS traffic from bastion if kubernetes master
  ufw:
    rule: allow
    port: "6443"
    from_ip: "{{ hostvars[item].openstack.private_v4 }}"
    proto: tcp
  with_items: "{{ groups['bastion'] }}"
  when: inventory_hostname in groups['k8s-master']

- name: Initialise Kubernetes control plane
  command: kubeadm init --apiserver-advertise-address={{ kube_master_ip }}
  args:
    creates: /etc/kubernetes/kubelet.conf
  register: kubeadm_init
  when: inventory_hostname in groups['k8s-master']

- name: Copy kubectl config to deploy user home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ deploy_user }}"
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"
    remote_src: True
  when: inventory_hostname in groups['k8s-master']

- name: Install WeaveNet pod network
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  when: inventory_hostname in groups['k8s-master']

- name: Ensure kube-dns has started
  shell: >
    kubectl -n kube-system get deployment -l k8s-app=kube-dns -o json |
      jq '(.items|length > 0) and (.items|map(.status.replicas == .status.availableReplicas)|all)'
  register: result
  until: result.stdout == "true"
  retries: 30
  delay: 10
  when: inventory_hostname in groups['k8s-master']

- name: Generate new kubeadm token if no token exists
  shell: kubeadm token create
  when: inventory_hostname in groups['k8s-master']

- name: Get kubeadm token
  shell: kubeadm token list | sed -n 2p | awk '{ print $1 };'
  register: kubeadm_token
  when: inventory_hostname in groups['k8s-master']

- name: Set kubeadm_token fact (masters)
  set_fact:
    kubeadm_token: "{{ kubeadm_token.stdout }}"
  when: inventory_hostname in groups['k8s-master']

- name: Set kubeadm_token fact (nodes)
  set_fact:
    kubeadm_token: "{{ hostvars[groups['k8s-master'][0]].kubeadm_token }}"
  when: inventory_hostname in groups['k8s-node']

- name: Join Kubernetes cluster
  command: kubeadm join --discovery-token-unsafe-skip-ca-verification --token={{ kubeadm_token }} {{ kube_master_ip }}:6443
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: inventory_hostname in groups['k8s-node']

- name: Make local artifacts directory
  file: path={{ playbook_dir }}/.artifacts state=directory
  delegate_to: 127.0.0.1

- name: Retrieve kubectl binary and Kubernetes admin config
  fetch:
    src: "{{ item.src }}"
    dest: "{{ playbook_dir }}/.artifacts/{{ item.dest }}"
    flat: yes
  with_items:
    - src: /usr/bin/kubectl
      dest: kubectl
    - src: /etc/kubernetes/admin.conf
      dest: kubernetes-admin.conf
  when: inventory_hostname in groups['k8s-master']

- name: Update config file to use master host name
  replace:
    path: "{{ playbook_dir }}/.artifacts/kubernetes-admin.conf"
    regexp: 'https:.*'
    replace: 'https://k8s-master:6443'
  delegate_to: 127.0.0.1
