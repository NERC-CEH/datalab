// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectSwitcher renders to match snapshot passing correct parameters to children 1`] = `
<PromisedContentWrapper
  className="ProjectSwitcher-promisedContent-2"
  promise={
    Object {
      "fetching": false,
    }
  }
>
  <Switcher
    classes={
      Object {
        "dropdownProgress": "ProjectSwitcher-dropdownProgress-3",
        "itemContent": "ProjectSwitcher-itemContent-4",
        "itemKey": "ProjectSwitcher-itemKey-5",
        "promisedContent": "ProjectSwitcher-promisedContent-2",
        "switcher": "ProjectSwitcher-switcher-1",
      }
    }
    currentProject={
      Object {
        "error": null,
        "fetching": false,
        "value": Object {
          "accessible": true,
          "key": "testproj",
          "name": "Test Project",
        },
      }
    }
    location={
      Object {
        "name": "expected location value",
      }
    }
    switcherProjects={
      Object {
        "error": null,
        "fetching": false,
        "value": Array [
          Object {
            "accessible": true,
            "key": "projthree",
            "name": "Project Three",
          },
          Object {
            "accessible": true,
            "key": "testproj",
            "name": "Test Project",
          },
        ],
      }
    }
  />
</PromisedContentWrapper>
`;

exports[`Switcher renders to match snapshot when switcherProjects is fetching 1`] = `
<WithStyles(ForwardRef(TextField))
  className="switcher"
  fullWidth={true}
  label="Current Project"
  margin="dense"
  select={true}
  value=""
  variant="outlined"
>
  <div
    className="dropdownProgress"
  >
    <WithStyles(ForwardRef(CircularProgress)) />
  </div>
</WithStyles(ForwardRef(TextField))>
`;

exports[`Switcher renders to match snapshot when there are accessible projects 1`] = `
<WithStyles(ForwardRef(TextField))
  className="switcher"
  fullWidth={true}
  label="Current Project"
  margin="dense"
  select={true}
  value="testproj"
  variant="outlined"
>
  <WithStyles(ForwardRef(MenuItem))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    key="testproj"
    to="/projects/testproj/info"
    value="testproj"
  >
    <div
      className="itemContent"
    >
      <WithStyles(ForwardRef(Typography))
        noWrap={true}
        variant="body1"
      >
        Test Project
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Typography))
        className="itemKey"
      >
        (testproj)
      </WithStyles(ForwardRef(Typography))>
    </div>
  </WithStyles(ForwardRef(MenuItem))>
  <WithStyles(ForwardRef(MenuItem))
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "displayName": "Link",
        "propTypes": Object {
          "innerRef": [Function],
          "onClick": [Function],
          "replace": [Function],
          "target": [Function],
          "to": [Function],
        },
        "render": [Function],
      }
    }
    key="projthree"
    to="/projects/projthree/info"
    value="projthree"
  >
    <div
      className="itemContent"
    >
      <WithStyles(ForwardRef(Typography))
        noWrap={true}
        variant="body1"
      >
        Project Three
      </WithStyles(ForwardRef(Typography))>
      <WithStyles(ForwardRef(Typography))
        className="itemKey"
      >
        (projthree)
      </WithStyles(ForwardRef(Typography))>
    </div>
  </WithStyles(ForwardRef(MenuItem))>
</WithStyles(ForwardRef(TextField))>
`;

exports[`Switcher renders to match snapshot when there are no projects to display 1`] = `
<WithStyles(ForwardRef(TextField))
  className="switcher"
  fullWidth={true}
  label="Current Project"
  margin="dense"
  select={true}
  value=""
  variant="outlined"
>
  <WithStyles(ForwardRef(MenuItem))>
    No Projects Accessible
  </WithStyles(ForwardRef(MenuItem))>
</WithStyles(ForwardRef(TextField))>
`;
