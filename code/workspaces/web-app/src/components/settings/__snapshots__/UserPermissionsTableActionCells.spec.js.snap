// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckboxCell renders correctly passing props to PermissionsCheckbox in TableCell 1`] = `
<WithStyles(ForwardRef(TableCell))
  align="center"
  key="key"
  padding="checkbox"
>
  <PermissionsCheckbox
    checkboxSpec={
      Object {
        "name": "admin",
        "value": 2,
      }
    }
    classes={
      Object {
        "activeSelection": "active",
        "implicitSelection": "implicit",
      }
    }
    dispatch={[MockFunction]}
    isCurrentUser={false}
    projectKey="projectKey"
    user={
      Object {
        "role": "admin",
      }
    }
  />
</WithStyles(ForwardRef(TableCell))>
`;

exports[`PermissionsCheckbox when checkbox user is the current user renders with correct check status and as disabled 1`] = `
<WithStyles(ForwardRef(Checkbox))
  checked={true}
  className="implicit"
  color="default"
  disabled={true}
  onClick={[Function]}
/>
`;

exports[`PermissionsCheckbox when user has rights equal to CheckboxSpec returns an checked active selection check box 1`] = `
<WithStyles(ForwardRef(Checkbox))
  checked={true}
  className="active"
  color="default"
  onClick={[Function]}
/>
`;

exports[`PermissionsCheckbox when user has rights greater than CheckboxSpec returns an checked implicit selection check box 1`] = `
<WithStyles(ForwardRef(Checkbox))
  checked={true}
  className="implicit"
  color="default"
  onClick={[Function]}
/>
`;

exports[`PermissionsCheckbox when user has rights less than CheckboxSpec returns an unchecked check box 1`] = `
<WithStyles(ForwardRef(Checkbox))
  checked={false}
  color="default"
  onClick={[Function]}
/>
`;

exports[`RemoveUserButtonCell renders as disabled when on the row of the current user 1`] = `
<WithStyles(ForwardRef(TableCell))
  align="center"
  className="tableCell"
  padding="checkbox"
>
  <WithStyles(ForwardRef(IconButton))
    disabled={true}
    onClick={[Function]}
  >
    <WithStyles(ForwardRef(Icon))>
      remove_circle_outline
    </WithStyles(ForwardRef(Icon))>
  </WithStyles(ForwardRef(IconButton))>
</WithStyles(ForwardRef(TableCell))>
`;
