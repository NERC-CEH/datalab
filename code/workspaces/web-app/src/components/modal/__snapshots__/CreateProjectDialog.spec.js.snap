// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateProjectDialog renders request form only if requestOnly is set 1`] = `
<WithStyles(ForwardRef(Dialog))
  fullWidth={true}
  open={true}
>
  <WithStyles(ForwardRef(DialogTitle))>
    Request New Project
  </WithStyles(ForwardRef(DialogTitle))>
  <WithStyles(ForwardRef(DialogContent))>
    <ReduxForm
      asyncBlurFields={
        Array [
          "projectKey",
        ]
      }
      asyncValidate={[Function]}
      destroyOnUnmount={false}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="createProject"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      onCancel={[MockFunction onCancel]}
      onSubmit={[MockFunction onSubmit]}
      persistentSubmitErrors={false}
      pure={true}
      requestOnly={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      submitAsSideEffect={false}
      touchOnBlur={true}
      touchOnChange={false}
      updateUnregisteredFields={false}
      validate={[Function]}
    />
  </WithStyles(ForwardRef(DialogContent))>
</WithStyles(ForwardRef(Dialog))>
`;

exports[`CreateProjectDialog renders to match snapshot passing function props to form 1`] = `
<WithStyles(ForwardRef(Dialog))
  fullWidth={true}
  open={true}
>
  <WithStyles(ForwardRef(DialogTitle))>
    Create New Project
  </WithStyles(ForwardRef(DialogTitle))>
  <WithStyles(ForwardRef(DialogContent))>
    <ReduxForm
      asyncBlurFields={
        Array [
          "projectKey",
        ]
      }
      asyncValidate={[Function]}
      destroyOnUnmount={false}
      enableReinitialize={false}
      forceUnregisterOnUnmount={false}
      form="createProject"
      getFormState={[Function]}
      keepDirtyOnReinitialize={false}
      onCancel={[MockFunction onCancel]}
      onSubmit={[MockFunction onSubmit]}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      submitAsSideEffect={false}
      touchOnBlur={true}
      touchOnChange={false}
      updateUnregisteredFields={false}
      validate={[Function]}
    />
  </WithStyles(ForwardRef(DialogContent))>
</WithStyles(ForwardRef(Dialog))>
`;
