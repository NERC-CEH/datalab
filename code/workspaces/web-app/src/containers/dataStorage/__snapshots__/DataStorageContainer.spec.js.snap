// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataStorageContainer is a connected component which binds correct actions 1`] = `
Array [
  "loadDataStorage",
  "getCredentials",
  "openMinioDataStore",
  "createDataStore",
  "deleteDataStore",
  "addUserToDataStore",
  "removeUserFromDataStore",
  "editDataStoreDetails",
  "openModalDialog",
  "closeModalDialog",
  "resetForm",
]
`;

exports[`DataStorageContainer is a container which confirmDeleteDataStore generates correct dialog for mounted volume 1`] = `
Object {
  "body": Array [
    "Unable to delete, Data Store is in use by the following resources:",
    "- Name (notebook)",
    "- Other Name (notebook) (Owner: user1)",
    "- Private (notebook) (Owner: user2)",
    "- Dask Cluster (DASK)",
    "- Spark Cluster (SPARK)",
  ],
  "title": "Unable to Delete expectedDisplayName Data Store",
}
`;

exports[`DataStorageContainer is a container which confirmDeleteDataStore generates correct dialog for unmounted volume 1`] = `
Object {
  "body": "Are you sure you want to delete the expectedDisplayName (expectedName) Data Store? This will
      destroy all data stored on the volume.",
  "title": "Delete expectedDisplayName Data Store",
}
`;

exports[`DataStorageContainer is a container which openCreationForm generates correct dialog 1`] = `
Object {
  "title": "Create a Data Store",
}
`;

exports[`DataStorageContainer is a container which openEditForm generates correct dialog 1`] = `
Object {
  "dataStoreId": "expectedId",
  "stack": Object {
    "displayName": "expectedDisplayName",
    "id": "expectedId",
  },
  "title": "Edit Data Store: expectedDisplayName",
  "typeName": "Data Store",
  "userKeysMapping": Object {
    "name": "label",
    "userId": "value",
  },
}
`;

exports[`DataStorageContainer is a container which passes correct props to StackCard 1`] = `
<StackCards
  createPermission="projects:project99:storage:create"
  deletePermission="projects:project99:storage:delete"
  deleteStack={[Function]}
  editPermission="projects:project99:storage:edit"
  editStack={[Function]}
  openCreationForm={[Function]}
  openPermission="projects:project99:storage:open"
  openStack={[Function]}
  showCreateButton={true}
  stacks={
    Object {
      "fetching": false,
      "value": Array [
        Object {
          "projectKey": "project99",
          "props": "expectedPropValue",
        },
      ],
    }
  }
  typeName="Data Store"
  typeNamePlural="Data Stores"
  userPermissions={[Function]}
/>
`;
