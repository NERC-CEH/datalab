// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataStorageContainer is a connected component which binds correct actions 1`] = `
Array [
  "loadDataStorage",
  "getCredentials",
  "openMinioDataStore",
  "createDataStore",
  "deleteDataStore",
  "addUserToDataStore",
  "removeUserFromDataStore",
  "openModalDialog",
  "closeModalDialog",
  "resetForm",
]
`;

exports[`DataStorageContainer is a container which confirmDeleteDataStore generates correct dialog for mounted volume 1`] = `
Object {
  "body": "Data Store is in use, unable to delete.",
  "title": "Unable to Delete expectedDisplayName Data Store",
}
`;

exports[`DataStorageContainer is a container which confirmDeleteDataStore generates correct dialog for unmounted volume 1`] = `
Object {
  "body": "Are you sure you want to delete the expectedDisplayName (expectedName) Data Store? This will
      destroy all data stored on the volume.",
  "title": "Delete expectedDisplayName Data Store",
}
`;

exports[`DataStorageContainer is a container which openCreationForm generates correct dialog 1`] = `
Object {
  "title": "Create a Data Store",
}
`;

exports[`DataStorageContainer is a container which openEditForm generates correct dialog 1`] = `
Object {
  "dataStoreId": "expectedId",
  "title": "Edit Data Store: expectedDisplayName",
  "userKeysMapping": Object {
    "name": "label",
    "userId": "value",
  },
}
`;

exports[`DataStorageContainer is a container which passes correct props to StackCard 1`] = `
<PromisedContentWrapper
  promise={
    Object {
      "fetching": false,
      "value": Array [
        Object {
          "props": "expectedPropValue",
        },
      ],
    }
  }
>
  <WithStyles(StackCards)
    createPermission="projects:project99:storage:create"
    deletePermission="projects:project99:storage:delete"
    deleteStack={[Function]}
    editPermission="projects:project99:storage:edit"
    editStack={[Function]}
    openCreationForm={[Function]}
    openPermission="projects:project99:storage:open"
    openStack={[Function]}
    stacks={
      Array [
        Object {
          "props": "expectedPropValue",
        },
      ]
    }
    typeName="Data Store"
    typeNamePlural="Data Stores"
    userPermissions={[Function]}
  />
</PromisedContentWrapper>
`;
