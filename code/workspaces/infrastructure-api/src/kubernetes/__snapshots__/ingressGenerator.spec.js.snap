// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Ingress generator should add auth-url for privateEndpoints 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should add proxy-request-buffering option if supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    nginx.ingress.kubernetes.io/proxy-request-buffering: \\"off\\"
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should add proxy-set-headers option if supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    nginx.ingress.kubernetes.io/proxy-set-headers: \\"proxy-headers-config-map\\"
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should add proxy-timeout options if supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    nginx.ingress.kubernetes.io/proxy-connect-timeout: \\"1800\\"
    nginx.ingress.kubernetes.io/proxy-read-timeout: \\"1800\\"
    nginx.ingress.kubernetes.io/proxy-send-timeout: \\"1800\\"
    nginx.ingress.kubernetes.io/proxy-socket-keepalive: \\"on\\"
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
      - path: /connect
        backend:
          serviceName: name-service
          servicePort: 8000
"
`;

exports[`Ingress generator should add rewrite target if supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    nginx.ingress.kubernetes.io/rewrite-target: /here
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
      - path: /connect
        backend:
          serviceName: name-service
          servicePort: 8000
"
`;

exports[`Ingress generator should generate a single path if connect port is not supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should generate multiple paths if connect port is supplied 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
      - path: /connect
        backend:
          serviceName: name-service
          servicePort: 8000
"
`;

exports[`Ingress generator should not add auth-url for a non-private endpoints 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should specify cluster issuer if defined 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
    cert-manager.io/cluster-issuer: \\"letsencrypt-staging\\"
spec:
  tls:
  - hosts:
    - project-name.datalabs.localhost
    secretName: \\"name-ingress-tls-secret\\"
  rules:
  - host: project-name.datalabs.localhost
    http:
      paths:
      - path: /resource/project/name
        backend:
          serviceName: name-service
          servicePort: 80
"
`;

exports[`Ingress generator should use datalab hostname and custom path for single hostname type 1`] = `
"---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-url: http://localhost:9000/auth
    nginx.ingress.kubernetes.io/auth-signin: https://testlab.test-datalabs.nerc.ac.uk
    nginx.ingress.kubernetes.io/proxy-body-size: 50g
spec:
  tls:
  - hosts:
    - testlab.datalabs.localhost
  rules:
  - host: testlab.datalabs.localhost
    http:
      paths:
      - path: /resource/project/name
        backend:
          serviceName: name-service
          servicePort: 80
"
`;
