{"paragraphs":[{"title":"Introduction","text":"%md\nThis scala workbook loads the land cover map and merges it with the survey data. The land cover map dataset is expected to be in multiple well-known text (wkt) formatted text files and the survey data is expected to be in a csv formatted file. Paths to these files are defined by the variables `lcmFilePath` and `surveyFilePath`. Output from this workbook is written in CSV format to the directory `outputPath`. All the paths must be within the `/data/` directory. (NB: Spark interpreator must have `com.esri.geometry:esri-geometry-api:1.2.1` as an artifact to work)","dateUpdated":"2017-08-01T11:40:51+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>This scala workbook loads the land cover map and merges it with the survey data. The land cover map dataset is expected to be in multiple well-known text (wkt) formatted text files and the survey data is expected to be in a csv formatted file. Paths to these files are defined by the variables <code>lcmFilePath</code> and <code>surveyFilePath</code>. Output from this workbook is written in CSV format to the directory <code>outputPath</code>. All the paths must be within the <code>/data/</code> directory. (NB: Spark interpreator must have <code>com.esri.geometry:esri-geometry-api:1.2.1</code> as an artifact to work)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1501587651944_-1965172080","id":"20170726-135459_619156081","dateCreated":"2017-08-01T11:40:51+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6937"},{"title":"Define paths to for Land Cover Map and Survey Data","text":"val lcmFilePath = \"/data/lcm/maps/csv/lcm25mWKT.*\"\nval surveyFilePath = \"/data/lcm/survey/csv/FieldSurvey.csv\"\nval outputPath = \"/data/lcm/results/lcm_combined\"","user":"datalab","dateUpdated":"2017-08-04T15:42:38+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nlcmFilePath: String = /data/lcm/maps/csv/lcm25mWKT.*\n\nsurveyFilePath: String = /data/lcm/survey/csv/FieldSurvey.csv\n\noutputPath: String = /data/lcm/results/lcm_combined\n"}]},"apps":[],"jobName":"paragraph_1501587651945_-1965556829","id":"20170726-125342_437515599","dateCreated":"2017-08-01T11:40:51+0000","dateStarted":"2017-08-04T15:42:38+0000","dateFinished":"2017-08-04T15:42:54+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:6938"},{"title":"Create Case Classes for  Data Import","text":"import com.esri.core.geometry._\nimport org.apache.spark.sql._\n\ncase class SurveyData(id: String, geometry: com.esri.core.geometry.Geometry, totalRichness: Array[Int], repeatPlo: String)\ncase class Feature(geometry: com.esri.core.geometry.Geometry, distribution: Array[Int], modalClass: Int)\ncase class Combined(point: String, polygon: String, distribution: Array[Int], modalClass: Int, totalRichness: Array[Int], repeatPlo: String)","user":"datalab","dateUpdated":"2017-08-02T09:14:09+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\n\n\n<console>:25: error: object esri is not a member of package com\n       import com.esri.core.geometry._\n                  ^\n"}]},"apps":[],"jobName":"paragraph_1501587651946_-1964402582","id":"20170619-132623_1185164014","dateCreated":"2017-08-01T11:40:51+0000","dateStarted":"2017-08-02T09:14:09+0000","dateFinished":"2017-08-02T09:14:09+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:6939"},{"title":"Create Data Parsing Functions","text":"def parseFeature(row: Row) : Feature = {\n    val geometryString = row.getAs[String](\"_c0\")\n    val geometry = GeometryEngine.geometryFromWkt(geometryString, WktImportFlags.wktImportDefaults, Geometry.Type.Polygon)\n    val distributionArray = row.getAs[String](\"_c3\").split(\",\").map(_.toInt)\n    val distribution = distributionArray.dropRight(2)\n    val modalClass = distributionArray.takeRight(1)(0)\n\n    Feature(geometry, distribution, modalClass)\n  }\n\ndef parseSurveyRow(row: Row) : SurveyData = {\n    val id = row.getAs[String](\"REP_ID\")\n    val geometryString = row.getAs[String](\"WKT\")\n    val modifiedString = geometryString.split(\" \").dropRight(1).mkString(\" \") + \")\"\n    val geometry = GeometryEngine.geometryFromWkt(modifiedString, WktImportFlags.wktImportDefaults, Geometry.Type.Unknown)\n    val totalRichness = Array[Int](row.getAs[String](\"TOT_RICH78\").toInt, row.getAs[String](\"TOT_RICH90\").toInt,\n                            row.getAs[String](\"TOT_RICH98\").toInt, row.getAs[String](\"TOT_RICH07\").toInt)\n    val repeatPlo = row.getAs[String](\"REPEAT_PLO\")\n    \n    SurveyData(id, geometry, totalRichness, repeatPlo)\n}\n\ndef combine(feature: Feature, surveyData: SurveyData) : Combined = {\n    val point = GeometryEngine.geometryToWkt(surveyData.geometry, WktExportFlags.wktExportPoint)\n    val polygon = GeometryEngine.geometryToWkt(feature.geometry, WktExportFlags.wktExportPolygon)\n    Combined(point, polygon, feature.distribution, feature.modalClass, surveyData.totalRichness, surveyData.repeatPlo)\n}","dateUpdated":"2017-08-01T11:40:51+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501587651946_-1964402582","id":"20170619-132708_191963517","dateCreated":"2017-08-01T11:40:51+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6940"},{"title":"Load and Join Land Cover Map with Survey Data","text":"val lcmReader = spark.read.csv(lcmFilePath)\nval lcmData = lcmReader.rdd.map(row => parseFeature(row))\n\nval surveyReader = spark.read.option(\"header\", \"true\").csv(surveyFilePath)\nval surveyData = surveyReader.rdd.map(row => parseSurveyRow(row)).collect()\n\nval bSurveyData = spark.sparkContext.broadcast(surveyData)\n\nval filteredFeatures = lcmData.map(feature => {\n    val pointInFeature: Option[SurveyData] = bSurveyData.value.find(point => {\n        GeometryEngine.contains(feature.geometry, point.geometry, SpatialReference.create(4326))\n    })\n    \n    if (pointInFeature.isDefined) {\n        combine(feature, pointInFeature.get)\n    } else {\n     null\n    }\n}).filter(_ != null)\n\nfilteredFeatures.map(row => {\n    row.totalRichness.mkString(\",\") + \",\" +\n    \"\\\"\" + row.distribution.mkString(\",\") + \"\\\",\" +\n    row.modalClass + \",\" +\n    row.repeatPlo\n}).saveAsTextFile(outputPath)","dateUpdated":"2017-08-01T11:40:51+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501587651947_-1964787331","id":"20170619-132344_155808096","dateCreated":"2017-08-01T11:40:51+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6941"},{"dateUpdated":"2017-08-01T11:40:51+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501587651947_-1964787331","id":"20170619-132454_101307222","dateCreated":"2017-08-01T11:40:51+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:6942"}],"name":"LCM/2 - Combine Land Cover Map with Survey Data","id":"2CNG6WJ8M","angularObjects":{"2CNGQ9ZEV:shared_process":[],"2CQ7GU4FB:shared_process":[],"2CPRU8YU3:shared_process":[],"2CPQMGVZT:shared_process":[],"2CQJM8N7T:shared_process":[],"2CQPTUQ17:shared_process":[],"2CQCMHJJ1:shared_process":[],"2CSBCZ6J8:shared_process":[],"2CS1JG68J:shared_process":[],"2CRFCFHHY:shared_process":[],"2CQFPJBKC:shared_process":[],"2CRM4WUJ5:shared_process":[],"2CRXU514W:shared_process":[],"2CPXWHSKQ:shared_process":[],"2CS7ZYDHF:shared_process":[],"2CRRH2DYD:shared_process":[],"2CPFY2D9T:shared_process":[],"2CS793581:shared_process":[],"2CQXNMMQZ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}