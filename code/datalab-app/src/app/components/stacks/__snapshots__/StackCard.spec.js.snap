// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StackCard creates correct snapshot for Jupyer stack type 1`] = `
<Card
  className="StackCard-card-1"
  raised={false}
>
  <withStyles(CardContent)>
    <div
      className="StackCard-cardHeader-2"
    >
      <div>
        <withStyles(Typography)
          type="headline"
        >
          name1
        </withStyles(Typography)>
        <withStyles(Typography)
          type="subheading"
        >
          Jupyter
        </withStyles(Typography)>
      </div>
      <withStyles(CardMedia)
        className="StackCard-cardMedia-3"
        image="jupyter-logo.svg"
      />
    </div>
    <withStyles(Typography)
      component="p"
    >
      Web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text.
    </withStyles(Typography)>
  </withStyles(CardContent)>
  <withStyles(CardActions)
    style={
      Object {
        "paddingLeft": 8,
        "paddingRight": 8,
      }
    }
  >
    <ComponentWrapper
      permission="open"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="primary"
        disabled={false}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginRight": 4,
          }
        }
      >
        Open
      </withStyles(Button)>
    </ComponentWrapper>
    <ComponentWrapper
      permission="delete"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="accent"
        disabled={false}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginLeft": 4,
          }
        }
      >
        Delete
      </withStyles(Button)>
    </ComponentWrapper>
  </withStyles(CardActions)>
</Card>
`;

exports[`StackCard creates correct snapshot for Zeppelin stack type 1`] = `
<Card
  className="StackCard-card-1"
  raised={false}
>
  <withStyles(CardContent)>
    <div
      className="StackCard-cardHeader-2"
    >
      <div>
        <withStyles(Typography)
          type="headline"
        >
          name1
        </withStyles(Typography)>
        <withStyles(Typography)
          type="subheading"
        >
          Zeppelin
        </withStyles(Typography)>
      </div>
      <withStyles(CardMedia)
        className="StackCard-cardMedia-3"
        image="zeppelin-logo.svg"
      />
    </div>
    <withStyles(Typography)
      component="p"
    >
      Web-based notebook that enables data-driven, interactive data analytics and collaborative documents with SQL, Scala and more.
    </withStyles(Typography)>
  </withStyles(CardContent)>
  <withStyles(CardActions)
    style={
      Object {
        "paddingLeft": 8,
        "paddingRight": 8,
      }
    }
  >
    <ComponentWrapper
      permission="open"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="primary"
        disabled={false}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginRight": 4,
          }
        }
      >
        Open
      </withStyles(Button)>
    </ComponentWrapper>
    <ComponentWrapper
      permission="delete"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="accent"
        disabled={false}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginLeft": 4,
          }
        }
      >
        Delete
      </withStyles(Button)>
    </ComponentWrapper>
  </withStyles(CardActions)>
</Card>
`;

exports[`StackCard should provide defaults and disable the open button if no stack is provided 1`] = `
<Card
  className="StackCard-card-1"
  raised={false}
>
  <withStyles(CardContent)>
    <div
      className="StackCard-cardHeader-2"
    >
      <div>
        <withStyles(Typography)
          type="headline"
        >
          Display Name
        </withStyles(Typography)>
        <withStyles(Typography)
          type="subheading"
        >
          TypeName type
        </withStyles(Typography)>
      </div>
      <withStyles(Icon)
        className="StackCard-cardIcon-4"
      >
        create
      </withStyles(Icon)>
    </div>
    <withStyles(Typography)
      component="p"
    >
      A description of the typeName purpose
    </withStyles(Typography)>
  </withStyles(CardContent)>
  <withStyles(CardActions)
    style={
      Object {
        "paddingLeft": 8,
        "paddingRight": 8,
      }
    }
  >
    <ComponentWrapper
      permission="open"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="primary"
        disabled={true}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginRight": 4,
          }
        }
      >
        Open
      </withStyles(Button)>
    </ComponentWrapper>
    <ComponentWrapper
      permission="delete"
      userPermissions={
        Array [
          "open",
          "delete",
        ]
      }
    >
      <withStyles(Button)
        color="accent"
        disabled={true}
        onClick={[Function]}
        raised={true}
        style={
          Object {
            "marginLeft": 4,
          }
        }
      >
        Delete
      </withStyles(Button)>
    </ComponentWrapper>
  </withStyles(CardActions)>
</Card>
`;
